// CheckStyle
//checkstyle {
//    configFile file("$rootDir/configs/checkstyle/google_check.xml")
//    ignoreFailures = false
//    showViolations true
//    tasks.withType(Checkstyle) {
//        reports {
//            xml.enabled false
//            html.enabled true
//        }
//    }
//    reportsDir = file("$rootDir/reports/checkstyle")
//}

// SpotBugs
//spotbugs {
//    includeFilter = file("$rootDir/configs/spotbugs_ruleset.xml")
//    tasks.withType(spotBugsTask) {
//        reports {
//            xml.enabled = false
//            html.enabled = true
//        }
//    }
//    reportsDir = file("$rootDir/reports/spotbugs")
//
//    def srcDirs = []
//    rootProject.allprojects{
//        def tree = fileTree(dir: 'src', include: '**/*.java').filter { it.name.endsWith('java') }
//        if (tree.size() > 0) {
//            srcDirs.add(projectDir.toString() + "/src/main/java")
//        }
//    }
//
//    if (srcDirs.size() == 0) {
//        sourceSets = [sourceSets.main]
//    } else {
//        sourceSets {
//            main {
//                java.srcDirs = srcDirs
//            }
//        }
//    }
//}

// PMD
//pmd {
//    ruleSetFiles = files("$rootDir/configs/pmd_ruleset.xml")
//    tasks.withType(Pmd) {
//        reports {
//            xml.enabled false
//            html.enabled true
//        }
//    }
//    reportsDir = file("$rootDir/reports/pmd")
//}

// Detekt
detekt {
    debug = true
    failFast = true
    input = files(
            "$rootDir/app/src/main/java"
    )
    filters = ".*/resources/.*,.*/build/.*"
    config = files("$rootDir/configs/default-detekt-config.yml")
    reports {
        xml {
            enabled = false
        }
        html {
            enabled = true
            destination = file("reports/detekt/detekt.html")
        }
    }
}

// Documentation engine for Kotlin and Java
dokka {
    outputFormat = 'gfm'
    outputDirectory = "$rootDir/documentation"
    sourceDirs = files(
            "$rootDir/library/src/main/java"
    )
    reportUndocumented = true
}